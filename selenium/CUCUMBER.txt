CUCUMBER FRAMEWORK:

THIS IS A FUNCTIONAL TESTING TOOL THAT WILL DESCRIBE THE OVERVIEW STRUCTURE OF THE FUNCTIONALITY.

THIS CUCUMBER IS USED FOR DESIGNING THE FRAMEWORK(BEHAVIOUR DATA-DRIVEN (BDD)) FRAMEWORK.

THE USER CAN CREATE OR GENERATE THE STRUCTURE OF THE FUNCTIONALITY. IN A PURE ENGLISH LANGUAGE KNOWN AS GENKIN

THIS LANGUAGE IS AN USER INTERFACE BY WHICH THE USER CAN UNDERSTAND THE BEHAVIOUR OF THE APPLICATION FUNCTIONALITY.

THE USER CREATES GENKIN LANGUAGE IN FUTURE FILES AND CREATES SCRIPTS IN THE TEST GENERATOR AND TEST DEFINITION.

THE REPORTS CAN BE GENERATED IN THE FORM OF HTML, XML, AND JSON FILES  IN THE TEST RUNNER FOLDER.

FUTURE FILES-BEHAVIOUR

METHODS IN FUTURE FILES ARE:
GIVEN
WHEN
THEN
AND


CUCUMBER FRAMEWORK
BDD FRAMEWORK
WE NEED TO INSTALL THE CUCUMBER PLUGIN IN ECLIPSE
LATER ON, WE NEED TO CREATE MAVEN PROJECT
WE NEED TO ADD DEPENDENCIES
CUCUMBER JAVA
CUCUMBER JUNIT
SELENIUM JAVA
SELENIUM JUNIT
TEST NG
APACHE POI JAR FILES
ADDING IN POM.XML UNDER DEPENDENCIES
STORING JAR FILES IN MAVEN DEPENDENCIES
CREATING A FOLDER IN SRC/TEST/JAVA/RESOURCES
CREATING FEATURE FILES IN A FOLDER
STEPS FOR CREATING FEATURE FILES:
RIGHT-CLICK ON THE FOLDER AND SELECT THE FILE SPECIFIED FILE NAME AS          .FEATURE
CLICK NEXT
CLICK FINISH.

CREATING STEP DEFINITION: 
SRC/TEST/JAVA FOLDER
RIGHT CLICK SELECT CLASS
SPECIFY CLASS NAME AS LOGIN
CLICK NEXT
CLICK FINISH

feature file
it starts with feature
we mention the working
feature:
scenario:given-user in amazon page
		when-user select dropdown element
		then -user clicks search button
		and-user navigated to home page

by cucumber.java it converts

in test runner class runs with cucumber.java class
@runwith("cucumber.java");

@cucumber options(features="src/java/test/resources/",
glue={"step definition"}

plugin={"target/html/a1.html"};











